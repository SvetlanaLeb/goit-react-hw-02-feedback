{"version":3,"sources":["components/StatisticsItems/StatisticsItems.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/StatisticsItems/StatisticsItems.module.css"],"names":["StatisticsItem","tag","value","className","s","data","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onCountFeedback","wrapper","map","type","button","onClick","toString","Section","title","children","section","container","Notification","message","App","state","props","handleBtnClick","setState","prevState","this","positiveFeedbackPercentage","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iRAoBeA,EAjBQ,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAC7B,OACE,mCACE,6BACE,oBAAGC,UAAWC,IAAEC,KAAhB,UACGJ,EADH,KACUC,UCiBHI,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,cAAC,EAAD,CAAgBV,IAAI,OAAOC,MAAOK,IAClC,cAAC,EAAD,CAAgBN,IAAI,UAAUC,MAAOM,IACrC,cAAC,EAAD,CAAgBP,IAAI,MAAMC,MAAOO,IACjC,cAAC,EAAD,CAAgBR,IAAI,QAAQC,MAAOQ,IACnC,cAAC,EAAD,CACET,IAAI,qBACJC,MAAK,UAAKS,EAAL,W,gBCMEC,EAhBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKX,UAAWC,IAAEW,QAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAI,OACf,8BACE,wBACEA,KAAK,SACLd,UAAS,UAAKC,IAAEc,OAAP,YAAiBd,IAAEa,IAC5BE,QAAS,kBAAML,EAAgBG,IAHjC,SAKGA,KANKA,EAAKG,kB,gBCWNC,EAbC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,yBAASpB,UAAWC,IAAEoB,QAAtB,SACE,sBAAKrB,UAAWC,IAAEqB,UAAlB,UACE,oBAAItB,UAAWC,IAAEkB,MAAjB,SAAyBA,IACxBC,QCAQG,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCIpCC,E,4MAOJC,MAAQ,CACNtB,KAAM,EAAKuB,MAAMvB,KACjBC,QAAS,EAAKsB,MAAMtB,QACpBC,IAAK,EAAKqB,MAAMrB,K,EAGlBsB,eAAiB,SAAAd,GACf,EAAKe,UAAS,SAAAC,GACZ,OAAO,eAAGhB,EAAOgB,EAAUhB,GAAQ,O,wDAIvC,WACE,MAA+BiB,KAAKL,MACpC,OADA,EAAQtB,KAAR,EAAcC,QAAd,EAAuBC,M,6CAIzB,SAAgCF,EAAMG,GACpC,IAAIyB,EAA6B,EAKjC,OAHI5B,IACF4B,EAA6BC,KAAKC,MAAc,IAAP9B,EAAcG,IAElDyB,I,oBAGT,WACE,MAA+BD,KAAKL,MAA5BtB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQwB,KAAKI,qBACbH,EAA6BD,KAAKK,gCACxC,OACE,qCACE,cAAC,EAAD,CAASjB,MAAO,wBAAhB,SACE,cAAC,EAAD,CACET,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBoB,KAAKH,mBAG1B,cAAC,EAAD,CAAST,MAAO,aAAhB,SACGZ,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBwB,EAA2B5B,EAAMG,KAGvD,cAAC,EAAD,CAAciB,QAAQ,wBAjB5B,W,GAtCYa,aAAZZ,EACGa,aAAe,CACpBlC,KAAM,EACNC,QAAS,EACTC,IAAK,GA4DMmB,QCjEfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,gCAAgC,KAAO,8BAA8B,QAAU,iCAAiC,IAAM,+B,kBCA5LD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,UAAY,6B,kBCAhGD,EAAOC,QAAU,CAAC,KAAO,iC","file":"static/js/main.49e7a800.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './StatisticsItems.module.css';\n\nconst StatisticsItem = ({ tag, value }) => {\n  return (\n    <>\n      <li>\n        <p className={s.data}>\n          {tag}: {value}\n        </p>\n      </li>\n    </>\n  );\n};\n\nStatisticsItem.propTypes = {\n  tag: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default StatisticsItem;\n","import PropTypes from 'prop-types';\nimport StatisticsItem from '../StatisticsItems/StatisticsItems';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul>\n      <StatisticsItem tag=\"Good\" value={good} />\n      <StatisticsItem tag=\"Neutral\" value={neutral} />\n      <StatisticsItem tag=\"Bad\" value={bad} />\n      <StatisticsItem tag=\"Total\" value={total} />\n      <StatisticsItem\n        tag=\"PositivePercentage\"\n        value={`${positivePercentage}%`}\n      />\n    </ul>\n  );\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onCountFeedback }) => (\n  <div className={s.wrapper}>\n    {options.map(type => (\n      <div key={type.toString()}>\n        <button\n          type=\"button\"\n          className={`${s.button} ${s[type]}`}\n          onClick={() => onCountFeedback(type)}\n        >\n          {type}\n        </button>\n      </div>\n    ))}\n  </div>\n);\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={s.section}>\n    <div className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  </section>\n);\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n  };\n\n  handleBtnClick = type => {\n    this.setState(prevState => {\n      return { [type]: prevState[type] + 1 };\n    });\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage(good, total) {\n    let positiveFeedbackPercentage = 0;\n\n    if (good) {\n      positiveFeedbackPercentage = Math.round((good * 100) / total);\n    }\n    return positiveFeedbackPercentage;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage;\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onCountFeedback={this.handleBtnClick}\n          />\n        </Section>\n        <Section title={'Statistics'}>\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positiveFeedbackPercentage(good, total)}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n        )\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedbackOptions_wrapper__1ZNlz\",\"button\":\"FeedbackOptions_button__185ZG\",\"good\":\"FeedbackOptions_good__36sBZ\",\"neutral\":\"FeedbackOptions_neutral__2YQqz\",\"bad\":\"FeedbackOptions_bad__GUCK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1hsSq\",\"title\":\"Section_title__3tNnY\",\"container\":\"Section_container__5iHA1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data\":\"StatisticsItems_data__1h9ZN\"};"],"sourceRoot":""}